apiVersion: legacy.k8s.keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: verrazzano-pg
  namespace: keycloak
  labels:
    app: verrazzano-external-keycloak
spec:
  realmSelector:
    matchLabels:
      app: verrazzano-external-keycloak
  client:
    clientId: verrazzano-pg
    enabled: true
    rootUrl: ''
    adminUrl: ''
    surrogateAuthRequired: false
    directAccessGrantsEnabled: true
    clientAuthenticatorType: client-secret
    redirectUris: []
    webOrigins:
      - "+"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: false
    implicitFlowEnabled: false
    serviceAccountsEnabled: false
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    authenticationFlowBindingOverrides: {}
    fullScopeAllowed: true
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: groups
        protocol: openid-connect
        protocolMapper: oidc-group-membership-mapper
        consentRequired: false
        config:
          multivalued: 'true'
          userinfo.token.claim: 'false'
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: groups
          jsonType.label: String
      - name: realm roles
        protocol: openid-connect
        protocolMapper: oidc-usermodel-realm-role-mapper
        consentRequired: false
        config:
          multivalued: 'true'
          user.attribute: foo
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: realm_access.roles
          jsonType.label: String
      - name: Client ID
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          userinfo.token.claim: 'true'
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: clientId
          jsonType.label: String
      - name: Client IP Address
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          userinfo.token.claim: 'true'
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: clientAddress
          jsonType.label: String
      - name: Client Host
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          userinfo.token.claim: 'true'
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: clientHost
          jsonType.label: String
    defaultClientScopes:
      - web-origins
      - role_list
      - roles
      - profile
      - email
    optionalClientScopes:
      - address
      - phone
      - offline_access
      - microprofile-jwt